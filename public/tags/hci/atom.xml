<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>HCI on J. Felipe Gonzalez, Ph.D.</title>
    <link>http://localhost:1313/tags/hci/</link>
    <description>Recent content in HCI on J. Felipe Gonzalez, Ph.D.</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 06 Sep 2024 09:08:10 -0500</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/hci/atom.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Facilitating the Parametric Definition of Geometric Properties in Programming-Based CAD</title>
      <link>http://localhost:1313/publications/facilitating-the-parametric-definition-of-geometric-properties-in-programming-based-cad/</link>
      <pubDate>Thu, 01 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/publications/facilitating-the-parametric-definition-of-geometric-properties-in-programming-based-cad/</guid>
      <description>Abstract Parametric Computer-aided design (CAD) enables the creation of reusable models by integrating variables into geometric properties, facilitating customization without a complete redesign. However, creating parametric designs in programming-based CAD presents significant challenges. Users define models in a code editor using a programming language, with the application generating a visual representation in a viewport. This rocess involves complex programming and arithmetic expressions to describe geometric properties, linking various object properties to create parametric designs.</description>
    </item>
    <item>
      <title>Understanding the Challenges of OpenSCAD Users for 3D Printing</title>
      <link>http://localhost:1313/publications/2024_chi_understanding/</link>
      <pubDate>Sat, 11 May 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/publications/2024_chi_understanding/</guid>
      <description>Abstract Direct manipulation has been established as the main interaction paradigm for Computer-Aided Design (CAD) for decades. It provides fast, incremental, and reversible actions that allow for an iterative process on a visual representation of the result. Despite its numerous advantages, some users prefer a programming-based approach where they describe the 3D model they design with a specific programming language, such as OpenSCAD. It allows users to create complex structured geometries and facilitates abstraction.</description>
    </item>
    <item>
      <title>Introducing Bidirectional Programming in Constructive Solid Geometry-Based CAD</title>
      <link>http://localhost:1313/publications/introducing-bidirectional-programming-in-constructive-solid-geometry-based-cad/</link>
      <pubDate>Fri, 13 Oct 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/publications/introducing-bidirectional-programming-in-constructive-solid-geometry-based-cad/</guid>
      <description>Abstract 3D Computer-Aided Design (CAD) users need to overcome several obstacles to benefit from the flexibility of programmatic interface tools. Besides the barriers of any programming language, users face challenges inherent to 3D spatial interaction. Scripting simple operations, such as moving an element in 3D space, can be significantly more challenging than performing the same task using direct manipulation. We introduce the concept of bidirectional programming for Constructive Solid Geometry (CSG) CAD tools, informed by interviews we performed with programmatic interface users.</description>
    </item>
    <item>
      <title>Adaptic: A Shape Changing Prop with Haptic Retargeting</title>
      <link>http://localhost:1313/publications/adaptic-a-shape-changing-prop-with-haptic-retargeting/</link>
      <pubDate>Tue, 09 Nov 2021 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/publications/adaptic-a-shape-changing-prop-with-haptic-retargeting/</guid>
      <description>Abstract We present Adaptic, a novel &amp;ldquo;hybrid&amp;rdquo; active/passive haptic device that can change shape to act as a proxy for a range of virtual objects in VR. We use Adaptic with haptic retargeting to redirect the user’s hand to provide haptic feedback for several virtual objects in arm’s reach using only a single prop. To evaluate the effectiveness of Adaptic with haptic retargeting, we conducted a within-subjects experiment employing a docking task to compare Adaptic to non-matching proxy objects (i.</description>
    </item>
    <item>
      <title>Adaptic: A Shape Changing Prop with Haptic Retargeting</title>
      <link>http://localhost:1313/projects/adaptic-shape-changing-prop-and-vr-haptic-reatergeting/</link>
      <pubDate>Sun, 01 Nov 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/adaptic-shape-changing-prop-and-vr-haptic-reatergeting/</guid>
      <description>Imagine interacting with virtual objects in VR and feeling as if you&amp;rsquo;re actually handling them, all while using just a single device. That’s exactly what we aimed to achieve with Adaptic, our innovative haptic device. Unlike traditional props, Adaptic is a shape-changing device that can transform its form to match various virtual objects you’re manipulating in VR.&#xA;Here’s how it works: Adaptic uses a clever technique called haptic retargeting to adjust its shape and provide realistic feedback for different virtual items.</description>
    </item>
    <item>
      <title>Facilitating Programming-based 3D Computer-Aided Design using Bidirectional Programming</title>
      <link>http://localhost:1313/projects/facilitating-programming-based-cad-with-bidirectionnal-programming/</link>
      <pubDate>Sun, 01 Nov 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/facilitating-programming-based-cad-with-bidirectionnal-programming/</guid>
      <description>Hey ! This project is aimed at improving the 3D design experience for users working with programming-based CAD applications where you must design in a text editor with a programming language while the application renders the visual representation of the model in a viewport after compiling, like OpenSCAD and JSCAD. It draws on insights from my PhD research, which you can explore in more detail here.&#xA;While many CAD tools feature intuitive drag-and-drop interfaces, programming-based CAD offers a unique, code-driven approach that unlocks powerful design possibilities.</description>
    </item>
    <item>
      <title>Facilitating the Parametric Definition of Geometric Properties in Programming-Based CAD</title>
      <link>http://localhost:1313/projects/interactive-parametric-design-in-programming-based-cad/</link>
      <pubDate>Sun, 01 Nov 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/interactive-parametric-design-in-programming-based-cad/</guid>
      <description>Parametric Computer-Aided Design (CAD) is a game-changer when it comes to creating customizable and reusable 3D models. By using variables in your designs, you can tweak and adjust models without starting from scratch. However, when it comes to programming-based CAD tools, things can get pretty complicated. These tools require users to code every aspect of their designs, linking various properties with complex mathematical expressions. This process can be daunting and error-prone, especially without much in the way of helpful assistance.</description>
    </item>
    <item>
      <title>Introducing Bidirectional Programming in Constructive Solid Geometry-Based CAD</title>
      <link>http://localhost:1313/projects/introducing-bidirectionnal-programmin-in-csg/</link>
      <pubDate>Sun, 01 Nov 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/introducing-bidirectionnal-programmin-in-csg/</guid>
      <description>Programming-based CAD applications are powerful, but they come with challenges. Unlike traditional drag-and-drop interfaces, scripting in tools like OpenSCAD can be frustrating, especially when trying to locate specific parts of the model in the code or move an element in 3D space.&#xA;In this project, I introduced bidirectional programming for Constructive Solid Geometry (CSG) CAD tools. This approach lets you seamlessly switch between coding and the 3D view, allowing for easy navigation and editing.</description>
    </item>
    <item>
      <title>Understanding the Challenges of OpenSCAD Users for 3D Printing</title>
      <link>http://localhost:1313/projects/understanding-openscad-challenges-for-3d-printing/</link>
      <pubDate>Fri, 24 Jan 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/understanding-openscad-challenges-for-3d-printing/</guid>
      <description>Computer-Aided Design (CAD) has long been dominated by direct manipulation tools—those intuitive, visual interfaces where designers can drag, drop, and tweak their creations with ease. While this approach has its merits, there&amp;rsquo;s a growing community of designers who prefer to take a different route: programming-based CAD. Tools like OpenSCAD allow users to describe their 3D models using code, offering unmatched precision and the ability to create complex, parametric designs. However, this method comes with its own set of challenges that are often overlooked.</description>
    </item>
  </channel>
</rss>
